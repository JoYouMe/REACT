1. 불변성
    - 불변성을 지킨다는 것은 기존의 값을 직접 수정하는 것이 
      아니고 새로운 값을 만들어 내는 것
    -   const array = [1,2,3,4,5];

        //배열을 복제하는 게 아니고 완전히 같은 배열을 가르키기 때문에
        //원본 배열의 값이 변경됨
        const nextArrayBad = array;
        nextArrayBad[0] = 100;
        console.log(array === nextArrayBad);
        console.log(array[0]);

        //복제된 배열을 새로 만들기 때문에
        //원본 배열의 값이 변경되지 않음
        const nextArrayGood = [...array];
        nextArrayGood[0] = 1000;
        console.log(array === nextArrayGood);
        console.log(array[0]);
    - 만약에 복제해야될 객체나 배열이 복잡해지면 불변성을 
      유지하기하기가 어려워짐
      const complexObject = {
          id: 1,
          name: 'a',
          objectInside: {
              number: 1,
              checked: true,
          }
      };

      const nextcomplexObject = {
          ...complexObject,
          name: 'b',
          objectInside: {
              ...complexObject.objectInside,
              checked: false
          }
      };

      console.log(complexObject === nextcomplexObject);  

2. 불변성을 쉽게 유지해주는 immer 라이브러리
    - immer 라이브러리를 사용하면 불변성을 신경쓰지 않는 것처럼 코드를 작성하되 불변성 관리는 제대로 이루어짐